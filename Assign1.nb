(*William Nebinger*)
(* 1. *)
f[x_] := E^(-x^2)

x0 = 0;

P1[x_] = Normal[Series[f[x], {x, x0, 1}]]

P5[x_] = Normal[Series[f[x], {x, x0, 5}]]

P10[x_] = Normal[Series[f[x], {x, x0, 10}]]

Plot[{f[x], P1[x], P5[x], P10[x]}, {x, -5, 5}, PlotRange -> {0, 1.2}, 
 PlotLegends -> "Expressions"]
 
 
 
 
 
 
 
 
 (*William Nebinger*)
 (* To know that I had all the real solutions, I used the fact that Sin(2x) - Sin(x) was at least -2 and at most 2.
 I used this information to determine that all the real solutions would be on the interval [-4, 4]. 
 I then used a graph to look at the solutions and used the information I obtained to get inputs to the FindRoot function*)
f[x_] := Sin[2 x] - Sin[x] + 0.5 x + 0.25
up[x_] := 0.5 x + 2.25;
down[x_] := 0.5 x - 1.75;
Plot[{f[x], up[x], down[x]}, {x, -5, 5}, PlotRange -> {-1, 1}, 
 PlotLegends -> "Expressions"]
FindRoot[f[x], {x, -3}]
FindRoot[f[x], {x, -1.5}]
FindRoot[f[x], {x, 0}]
FindRoot[f[x], {x, 1.75}]
FindRoot[f[x], {x, 2.25}]







(*William Nebinger*)
a = -1;
b = 0;
c = 0;
TOL = 10^-5;
f[x_] = 2 x*Cos[2*x] - (x + 1)^2;

For[i = 0, i <= 17, i++,
 c = (a + b) / 2;
 Print["N:", i, " A:", a, " B:", b, " C: ", c];
 If[(f[c] == 0) or (((b - a) / 2 ) <= TOL), Print[c]; Break[]];
 If[Sign[f[c]] == Sign[f[a]], a = c, b = c];
 ]
 
 (*Roberto Edde*)
 
a = -1;
b = 0;
c = 0;
TOL = 10^-5;
f[x_] = 2 *x*Cos[2*x] - (x + 1)^2;

For[i = 0, i <= 17, i++, c = (a*f[b] - b*f[a])/(f[b] - f[a]);
  Print["N:", i, " A:", a, " B:", b, " C: ", c];
  If[(Abs[c - b] < TOL), Print[c]; Break[]];
  If[f[c]*f[b] < 0, a = b];];
 
